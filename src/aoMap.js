// The real world has shadows everywhere.
// Not just the big dramatic ones from a light source, but soft, subtle ones that happen where light struggles to reach â€” like:

// The crease in your palm
// The edge where a cup touches the table
// The space under your eye
// The gap between stacked tiles or coins
// These shadows are barely noticeable at first glance â€” but without them, everything feels... fake.

// So How Do We Fake These Shadows?
// We bake them.
// We calculate how occluded (blocked) each part of the model is from ambient light, and we save that info into a black-and-white image:

// Weâ€™re not adding new lights.
// Weâ€™re just telling the renderer:

// "Hey, treat this crevice like itâ€™s in a darker place. Donâ€™t blast it with ambient light."

// aoMaps just sit quietly in your material â€” doing the hard work of selling depth.
// But once you turn them off?
// Your whole model feels like itâ€™s in a blank white box.

// ðŸ’¡ Focus on where pieces meet â€” like seams, corners, or curved details. Thatâ€™s where AO does its best work.
// With AO: Shadow hugs the curves and cavities
// Without AO: Everything looks equally flat

// Ambient Occlusion isnâ€™t flashy. It wonâ€™t make your scene explode with color.

// But when itâ€™s missing, your viewer feels it â€” even if they donâ€™t know why.

// AO maps fill the silence between surfaces
// They give weight to floating objects
// They let your models rest in their world
// Itâ€™s not about adding more â€” Itâ€™s about subtracting brightness where light doesnâ€™t belong.

// So next time your model feels too clean, too flat, too CGâ€¦ donâ€™t just add another light.

// Try adding a shadow that doesnâ€™t come from one. Try ambient occlusion.

const material = new THREE.MeshStandardMaterial({
  map: colorMap,
  aoMap: aoMap,
  aoMapIntensity: 1,
});

// Next up, weâ€™ll explore Emissive Maps â€” to make your objects glow from within, like neon signs, lava, or magical runes. ðŸ”¥
